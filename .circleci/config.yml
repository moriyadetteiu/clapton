version: 2.1

commands:
  restore-docker-images:
    steps:
      # ci特有の設定が必要になりそうなら、.env.ci的なのを切る
      - run: cp ./docker/mysql/.env.example ./docker/mysql/.env
      - run:
          name: Docker関連の設定ファイルを結合します。キャッシュ用
          command: find ./docker -name "Dockerfile" -o -name ".env" -type f | xargs cat > ./combine_docker_files
      - restore_cache:
          key: docker-{{ checksum "./docker-compose.yml" }}-{{ checksum "./combine_docker_files" }}

  load-docker-images:
    steps:
      - restore-docker-images
      - run: |
          if [ -e /tmp/docker/image ]; then
            echo "docker image loading..."
            docker load -i /tmp/docker/image
          else
            echo "saved docker image is not exists"
          fi

  restore-front-node_modules:
    steps:
      - restore_cache:
          keys:
            - front-node_modules-{{ checksum "./front/package-lock.json" }}

  restore-mock-node_modules:
    steps:
      - restore_cache:
          keys:
            - mock-node_modules-{{ checksum "./mock/package-lock.json" }}

  restore-laravel-composer:
    steps:
      - restore_cache:
          keys:
            - laravel-composer-{{ checksum "./laravel/composer.lock" }}

  up-docker-compose:
    steps:
      - load-docker-images
      - run: docker-compose up -d

executors:
  test-executer:
    machine:
      image: circleci/classic:edge

jobs:
  build:
    executor: test-executer
    steps:
      - checkout
      - restore-docker-images
      - run: |
          if [ -e /tmp/docker/image ]; then
            echo "imageが生成済みのため、buildをスキップします"
            circleci step halt
          fi
      - run: docker-compose build
      - run: mkdir -p /tmp/docker
      - run: docker save $(docker images -q) -o /tmp/docker/image
      - save_cache:
          key: docker-{{ checksum "./docker-compose.yml" }}-{{ checksum "./combine_docker_files" }}
          paths:
            - /tmp/docker/image

  npm-front:
    executor: test-executer
    steps:
      - checkout
      - restore-front-node_modules
      - run: |
          if [ -e ./front/node_modules ]; then
            circleci step halt
          fi
      - up-docker-compose
      - restore_cache:
          keys:
            - front-node_modules-
      - run: docker-compose exec front npm install
      - save_cache:
            key: front-node_modules-{{ checksum "./front/package-lock.json" }}
            paths:
                - ./front/node_modules

  npm-mock:
    executor: test-executer
    steps:
      - checkout
      - restore-mock-node_modules
      - run: |
          if [ -e ./mock/node_modules ]; then
            circleci step halt
          fi
      - up-docker-compose
      - restore_cache:
          keys:
            - mock-node_modules-
      - run: docker-compose exec mock npm install
      - save_cache:
            key: mock-node_modules-{{ checksum "./mock/package-lock.json" }}
            paths:
                - ./mock/node_modules

  composer-install:
    executor: test-executer
    steps:
      - checkout
      - restore-laravel-composer
      - run: |
          if [ -e ./laravel/vendor ]; then
            circleci step halt
          fi
      - up-docker-compose
      - restore_cache:
          keys:
            - laravel-composer-
      - run: docker-compose exec laravel composer install
      - save_cache:
            key: laravel-composer-{{ checksum "./laravel/composer.lock" }}
            paths:
                - ./laravel/vendor

  code-style-check-front:
    executor: test-executer
    steps:
      - checkout
      - up-docker-compose
      - restore-front-node_modules
      - run: chmod -R 777 ./front
      - run: docker-compose exec front npm run lint

  code-style-check-mock:
    executor: test-executer
    steps:
      - checkout
      - up-docker-compose
      - restore-mock-node_modules
      - run: echo "TODO eslintをかけれるようにする"

  code-style-check-laravel:
    executor: test-executer
    steps:
      - checkout
      - up-docker-compose
      - restore-laravel-composer
      - run: echo "TODO phpcs or phpmdを入れてチェックをかけれるようにする"

  test-front:
    executor: test-executer
    steps:
      - checkout
      - up-docker-compose
      - restore-front-node_modules
      - run: docker-compose exec front build
      - run: docker-compose exec front test

  test-laravel:
    executor: test-executer
    steps:
      - checkout
      - up-docker-compose
      - restore-laravel-composer
      - run: cp ./laravel/.env.example ./laravle/.env
      - run: docker-compose exec laravel key:generate
      - run: docker-compose exec laravel ./vendor/bin/phpunit

workflows:
  version: 2
  test:
    jobs:
      - build
      - npm-front:
          requires:
            - build
      - npm-mock:
          requires:
            - build
      - composer-install:
          requires:
            - build
      - code-style-check-front:
          requires:
            - npm-front
      - code-style-check-mock:
          requires:
            - npm-mock
      - code-style-check-laravel:
          requires:
            - composer-install
      - test-front:
          requires:
            - npm-front
            - npm-mock
      - test-laravel:
          requires:
            - composer-install
